# ARG PHP_EXTENSIONS="apcu bcmath pdo_pgsql pdo_mysql redis imagick gd"
# FROM thecodingmachine/php:8.0-v4-fpm as php_base
# #ENV TEMPLATE_PHP_INI=production
# #copy our laravel application to html
# COPY --chown=docker:docker . /var/www/html
# RUN composer install --quiet --optimize-autoloader --no-dev --ignore-platform-reqs
# # RUN composer update
# FROM node:14 as node_dependencies
# WORKDIR /var/www/html
# ENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=false
# #bring in the laravel application from the php_base to our node js container
# COPY --from=php_base /var/www/html /var/www/html
# # RUN npm set progress=false && \
# #     npm config set depth 0 && \
# #     npm install && \
# #     npm run prod && \
# #     rm -rf node_modules

# ENV TZ=Asia/Jakarta

# RUN rm -rf /etc/localtime
# RUN ln -s /usr/share/zoneinfo/Asia/Jakarta /etc/localtime

# FROM php_base
# #bring the finished build back into the php container
# COPY --from=node_dependencies --chown=docker:docker /var/www/html /var/www/html

ARG PHP_EXTENSIONS="apcu bcmath pdo_pgsql pdo_mysql redis imagick gd zip"

FROM thecodingmachine/php:8.0-v4-fpm as php_base

# ENV TEMPLATE_PHP_INI=production
COPY --chown=docker:docker . /var/www/html
RUN composer install --quiet --optimize-autoloader --no-dev --ignore-platform-reqs

# FROM node:10 as node_dependencies
# WORKDIR /var/www/html

# ENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=false
# COPY --from=php_base /var/www/html /var/www/html

# RUN npm set progress=false && \
#   npm config set depth 0 && \
#   npm install && \
#   npm run prod && \
#   rm -rf node_modules

FROM php_base
ENV PHP_EXTENSION_PGSQL=1
ENV PHP_EXTENSION_PDO_PGSQL=1
# COPY --from=node_dependencies --chown=docker:docker /var/www/html /var/www/html